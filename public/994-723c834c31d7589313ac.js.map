{"version":3,"file":"994-723c834c31d7589313ac.js","mappings":"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","sources":["webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/dom.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/template.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/modify-template.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/directive.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/part.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/template-instance.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/template-result.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/parts.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/template-factory.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/render.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/default-template-processor.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lit-html.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-html/lib/shady-render.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-element/lib/updating-element.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-element/lib/decorators.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-element/lib/css-tag.js","webpack://portfolio/./node_modules/emoji-slider/node_modules/lit-element/lit-element.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/boot.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/async.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/mixin.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/debounce.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/settings.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/resolve-url.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/wrap.js","webpack://portfolio/./node_modules/@polymer/polymer/lib/utils/gestures.js","webpack://portfolio/./node_modules/emoji-slider/bin/emoji-slider.js","webpack://portfolio/./src/components/Home/Contact.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     * @deprecated Override `getUpdateComplete()` instead for forward\n     *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n     */\n    _getUpdateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async getUpdateComplete() {\n     *       await super.getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n * @deprecated `internalProperty` has been renamed to `state` in lit-element\n *     3.0. Please update to `state` now to be compatible with 3.0.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n */\nexport const state = (options) => internalProperty(options);\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const prop = name !== undefined ? name : protoOrDescriptor.key;\n            const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        // tslint:disable-next-line:no-any testing existence on older browsers\n                        (node.matches ?\n                            node.matches(selector) :\n                            legacyMatches.call(node, selector)));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport { UpdatingElement as ReactiveElement } from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow(this.constructor.shadowRootOptions);\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n/** @nocollapse */\nLitElement.shadowRootOptions = { mode: 'open' };\n//# sourceMappingURL=lit-element.js.map","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {?} prop Property name\n * @param {*} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent++;\n    }\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n      // copy inherited mixin set from the extended class, or the base class\n      // NOTE: we avoid use of Set here because some browser (IE11)\n      // cannot extend a base Set via the constructor.\n      let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n      mixinSet[mixinDedupeId] = true;\n      /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    }\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport './mixin.js';\nimport './async.js';\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */(this._timer));\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@polymer/polymer/lib/utils/async.js';\n   * import {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.add(debouncer);\n};\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport const flushDebouncers = function() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n};","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\nexport const useShadow = !(window.ShadyDOM) || !(window.ShadyDOM.inUse);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport const supportsAdoptingStyleSheets = useShadow &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replaceSync' in CSSStyleSheet.prototype) &&\n    // Since spec may change, feature detect exact API we need\n    (() => {\n      try {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('');\n        const host = document.createElement('div');\n        host.attachShadow({mode: 'open'});\n        host.shadowRoot.adoptedStyleSheets = [sheet];\n        return (host.shadowRoot.adoptedStyleSheets[0] === sheet);\n      } catch(e) {\n        return false;\n      }\n    })();\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nexport let rootPath = window.Polymer && window.Polymer.rootPath ||\n  pathFromUrl(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM.\n * The callback signature is:\n *\n *  function sanitizeDOMValue(value, name, type, node) { ... }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,?Node):*)|undefined}\n */\nexport let sanitizeDOMValue =\n  window.Polymer && window.Polymer.sanitizeDOMValue || undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,?Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Gets sanitizeDOMValue, for environments that don't well support `export let`.\n *\n * @return {(function(*,string,string,?Node):*)|undefined} sanitizeDOMValue\n */\nexport const getSanitizeDOMValue = function() {\n  return sanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nexport let passiveTouchGestures =\n  window.Polymer && window.Polymer.setPassiveTouchGestures || false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nexport const setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n/**\n * Setting to ensure Polymer template evaluation only occurs based on tempates\n * defined in trusted script.  When true, `<dom-module>` re-registration is\n * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`\n * templates will only evaluate in the context of a trusted element template.\n */\nexport let strictTemplatePolicy =\n  window.Polymer && window.Polymer.strictTemplatePolicy || false;\n\n/**\n * Sets `strictTemplatePolicy` globally for all elements\n *\n * @param {boolean} useStrictPolicy enable or disable strict template policy\n *   globally\n * @return {void}\n */\nexport const setStrictTemplatePolicy = function(useStrictPolicy) {\n  strictTemplatePolicy = useStrictPolicy;\n};\n\n/**\n * Setting to enable dom-module lookup from Polymer.Element.  By default,\n * templates must be defined in script using the `static get template()`\n * getter and the `html` tag function.  To enable legacy loading of templates\n * via dom-module, set this flag to true.\n */\nexport let allowTemplateFromDomModule =\n  window.Polymer && window.Polymer.allowTemplateFromDomModule || false;\n\n/**\n * Sets `lookupTemplateFromDomModule` globally for all elements\n *\n * @param {boolean} allowDomModule enable or disable template lookup\n *   globally\n * @return {void}\n */\nexport const setAllowTemplateFromDomModule = function(allowDomModule) {\n  allowTemplateFromDomModule = allowDomModule;\n};\n\n/**\n * Setting to skip processing style includes and re-writing urls in css styles.\n * Normally \"included\" styles are pulled into the element and all urls in styles\n * are re-written to be relative to the containing script url.\n * If no includes or relative urls are used in styles, these steps can be\n * skipped as an optimization.\n */\nexport let legacyOptimizations =\n  window.Polymer && window.Polymer.legacyOptimizations || false;\n\n/**\n * Sets `legacyOptimizations` globally for all elements to enable optimizations\n * when only legacy based elements are used.\n *\n * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations\n * includes and url rewriting\n * @return {void}\n */\nexport const setLegacyOptimizations = function(useLegacyOptimizations) {\n  legacyOptimizations = useLegacyOptimizations;\n};\n\n/**\n * Setting to add warnings useful when migrating from Polymer 1.x to 2.x.\n */\nexport let legacyWarnings =\n  window.Polymer && window.Polymer.legacyWarnings || false;\n\n/**\n * Sets `legacyWarnings` globally for all elements to migration warnings.\n *\n * @param {boolean} useLegacyWarnings enable or disable warnings\n * @return {void}\n */\nexport const setLegacyWarnings = function(useLegacyWarnings) {\n  legacyWarnings = useLegacyWarnings;\n};\n\n/**\n * Setting to perform initial rendering synchronously when running under ShadyDOM.\n * This matches the behavior of Polymer 1.\n */\nexport let syncInitialRender =\n  window.Polymer && window.Polymer.syncInitialRender || false;\n\n/**\n * Sets `syncInitialRender` globally for all elements to enable synchronous\n * initial rendering.\n *\n * @param {boolean} useSyncInitialRender enable or disable synchronous initial\n * rendering globally.\n * @return {void}\n */\nexport const setSyncInitialRender = function(useSyncInitialRender) {\n  syncInitialRender = useSyncInitialRender;\n};\n\n/**\n * Setting to retain the legacy Polymer 1 behavior for multi-property\n * observers around undefined values. Observers and computed property methods\n * are not called until no argument is undefined.\n */\nexport let legacyUndefined =\n  window.Polymer && window.Polymer.legacyUndefined || false;\n\n/**\n * Sets `legacyUndefined` globally for all elements to enable legacy\n * multi-property behavior for undefined values.\n *\n * @param {boolean} useLegacyUndefined enable or disable legacy\n * multi-property behavior for undefined.\n * @return {void}\n */\nexport const setLegacyUndefined = function(useLegacyUndefined) {\n  legacyUndefined = useLegacyUndefined;\n};\n\n/**\n * Setting to ensure computed properties are computed in order to ensure\n * re-computation never occurs in a given turn.\n */\nexport let orderedComputed =\n  window.Polymer && window.Polymer.orderedComputed || false;\n\n/**\n * Sets `orderedComputed` globally for all elements to enable ordered computed\n * property computation.\n *\n * @param {boolean} useOrderedComputed enable or disable ordered computed effects\n * @return {void}\n */\nexport const setOrderedComputed = function(useOrderedComputed) {\n  orderedComputed = useOrderedComputed;\n};\n\n/**\n * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers\n * no longer fire synthetic click events, and the cancellation behavior can interfere\n * when programmatically clicking on elements.\n */\nexport let cancelSyntheticClickEvents = true;\n\n/**\n * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.\n *\n * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic\n * events\n * @return {void}\n */\nexport const setCancelSyntheticClickEvents = function(useCancelSyntheticClickEvents) {\n  cancelSyntheticClickEvents = useCancelSyntheticClickEvents;\n};\n\n/**\n * Setting to remove nested templates inside `dom-if` and `dom-repeat` as\n * part of element template parsing.  This is a performance optimization that\n * eliminates most of the tax of needing two elements due to the loss of\n * type-extended templates as a result of the V1 specification changes.\n */\nexport let removeNestedTemplates =\n  window.Polymer && window.Polymer.removeNestedTemplates || false;\n\n/**\n * Sets `removeNestedTemplates` globally, to eliminate nested templates\n * inside `dom-if` and `dom-repeat` as part of template parsing.\n *\n * @param {boolean} useRemoveNestedTemplates enable or disable removing nested\n *   templates during parsing\n * @return {void}\n */\nexport const setRemoveNestedTemplates = function(useRemoveNestedTemplates) {\n  removeNestedTemplates = useRemoveNestedTemplates;\n};\n\n/**\n * Setting to place `dom-if` elements in a performance-optimized mode that takes\n * advantage of lighter-weight host runtime template stamping to eliminate the\n * need for an intermediate Templatizer `TemplateInstance` to mange the nodes\n * stamped by `dom-if`.  Under this setting, any Templatizer-provided API's\n * such as `modelForElement` will not be available for nodes stamped by\n * `dom-if`.\n */\nexport let fastDomIf = window.Polymer && window.Polymer.fastDomIf || false;\n\n/**\n * Sets `fastDomIf` globally, to put `dom-if` in a performance-optimized mode.\n *\n * @param {boolean} useFastDomIf enable or disable `dom-if` fast-mode\n * @return {void}\n */\nexport const setFastDomIf = function(useFastDomIf) {\n  fastDomIf = useFastDomIf;\n};\n\n/**\n * Setting to disable `dom-change` and `rendered-item-count` events from\n * `dom-if` and `dom-repeat`. Users can opt back into `dom-change` events by\n * setting the `notify-dom-change` attribute (`notifyDomChange: true` property)\n * to `dom-if`/`don-repeat` instances.\n */\nexport let suppressTemplateNotifications =\n  window.Polymer && window.Polymer.suppressTemplateNotifications || false;\n\n/**\n * Sets `suppressTemplateNotifications` globally, to disable `dom-change` and\n * `rendered-item-count` events from `dom-if` and `dom-repeat`.\n *\n * @param {boolean} suppress enable or disable `suppressTemplateNotifications`\n * @return {void}\n */\nexport const setSuppressTemplateNotifications = function(suppress) {\n  suppressTemplateNotifications = suppress;\n};\n\n/**\n * Setting to disable use of dynamic attributes. This is an optimization\n * to avoid setting `observedAttributes`. Instead attributes are read\n * once at create time and set/removeAttribute are patched.\n */\nexport let legacyNoObservedAttributes =\n  window.Polymer && window.Polymer.legacyNoObservedAttributes || false;\n\n/**\n * Sets `legacyNoObservedAttributes` globally, to disable `observedAttributes`.\n *\n * @param {boolean} noObservedAttributes enable or disable `legacyNoObservedAttributes`\n * @return {void}\n */\nexport const setLegacyNoObservedAttributes = function(noObservedAttributes) {\n  legacyNoObservedAttributes = noObservedAttributes;\n};\n\n/**\n * Setting to enable use of `adoptedStyleSheets` for sharing style sheets\n * between component instances' shadow roots, if the app uses built Shady CSS\n * styles.\n */\nexport let useAdoptedStyleSheetsWithBuiltCSS =\n  window.Polymer && window.Polymer.useAdoptedStyleSheetsWithBuiltCSS || false;\n\n/**\n * Sets `useAdoptedStyleSheetsWithBuiltCSS` globally.\n *\n * @param {boolean} value enable or disable `useAdoptedStyleSheetsWithBuiltCSS`\n * @return {void}\n */\nexport const setUseAdoptedStyleSheetsWithBuiltCSS = function(value) {\n  useAdoptedStyleSheetsWithBuiltCSS = value;\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return (new URL(url, baseURI)).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable valid-jsdoc */\n/**\n * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill\n * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,\n * a node wrapper must be used to access ShadowDOM API.\n * This is similar to using `Polymer.dom` but relies exclusively\n * on the presence of the ShadyDOM polyfill rather than requiring the loading\n * of legacy (Polymer.dom) API.\n * @type {function(Node):Node}\n */\nexport const wrap = (window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap']) ?\n  window['ShadyDOM']['wrap'] :\n  (window['ShadyDOM'] ? (n) => ShadyDOM['patch'](n) : (n) => n);\n\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module for adding listeners to a node for the following normalized\n * cross-platform \"gesture\" events:\n * - `down` - mouse or touch went down\n * - `up` - mouse or touch went up\n * - `tap` - mouse click or finger tap\n * - `track` - mouse drag or touch move\n *\n * @summary Module for adding cross-platform gesture event listeners.\n */\n\nimport './boot.js';\n\nimport { timeOut, microTask } from './async.js';\nimport { Debouncer } from './debounce.js';\nimport { passiveTouchGestures, cancelSyntheticClickEvents } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// detect native touch action support\nlet HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nlet GESTURE_KEY = '__polymerGestures';\nlet HANDLED_OBJ = '__polymerGesturesHandled';\nlet TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nlet TAP_DISTANCE = 25;\nlet TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nlet TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nlet MOUSE_TIMEOUT = 2500;\nlet MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nlet MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nlet MOUSE_HAS_BUTTONS = (function() {\n  try {\n    return new MouseEvent('test', {buttons: 1}).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * @param {string} name Possible mouse event name\n * @return {boolean} true if mouse event, false if not\n */\nfunction isMouseEvent(name) {\n  return MOUSE_EVENTS.indexOf(name) > -1;\n}\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet supportsPassive = false;\n(function() {\n  try {\n    let opts = Object.defineProperty({}, 'passive', {get() {supportsPassive = true;}});\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch(e) {}\n})();\n\n/**\n * Generate settings for event listeners, dependant on `passiveTouchGestures`\n *\n * @param {string} eventName Event name to determine if `{passive}` option is\n *   needed\n * @return {{passive: boolean} | undefined} Options to use for addEventListener\n *   and removeEventListener\n */\nfunction PASSIVE_TOUCH(eventName) {\n  if (isMouseEvent(eventName) || eventName === 'touchend') {\n    return;\n  }\n  if (HAS_NATIVE_TA && supportsPassive && passiveTouchGestures) {\n    return {passive: true};\n  } else {\n    return;\n  }\n}\n\n// Check for touch-only devices\nlet IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n// keep track of any labels hit by the mouseCanceller\n/** @type {!Array<!HTMLLabelElement>} */\nconst clickedLabels = [];\n\n/** @type {!Object<boolean>} */\nconst labellable = {\n  'button': true,\n  'input': true,\n  'keygen': true,\n  'meter': true,\n  'output': true,\n  'textarea': true,\n  'progress': true,\n  'select': true\n};\n\n// Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute\n/** @type {!Object<boolean>} */\nconst canBeDisabled = {\n  'button': true,\n  'command': true,\n  'fieldset': true,\n  'input': true,\n  'keygen': true,\n  'optgroup': true,\n  'option': true,\n  'select': true,\n  'textarea': true\n};\n\n/**\n * @param {HTMLElement} el Element to check labelling status\n * @return {boolean} element can have labels\n */\nfunction canBeLabelled(el) {\n  return labellable[el.localName] || false;\n}\n\n/**\n * @param {HTMLElement} el Element that may be labelled.\n * @return {!Array<!HTMLLabelElement>} Relevant label for `el`\n */\nfunction matchingLabels(el) {\n  let labels = Array.prototype.slice.call(/** @type {HTMLInputElement} */(el).labels || []);\n  // IE doesn't have `labels` and Safari doesn't populate `labels`\n  // if element is in a shadowroot.\n  // In this instance, finding the non-ancestor labels is enough,\n  // as the mouseCancellor code will handle ancstor labels\n  if (!labels.length) {\n    labels = [];\n    try {\n      let root = el.getRootNode();\n      // if there is an id on `el`, check for all labels with a matching `for` attribute\n      if (el.id) {\n        let matching = root.querySelectorAll(`label[for = '${el.id}']`);\n        for (let i = 0; i < matching.length; i++) {\n          labels.push(/** @type {!HTMLLabelElement} */(matching[i]));\n        }\n      }\n    } catch (e) {\n      // Either:\n      // 1. el.getRootNode() failed.\n      // 2. el.id cannot be used in `querySelectorAll`\n      // In both cases, do nothing.\n    }\n  }\n  return labels;\n}\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nlet mouseCanceller = function(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  let sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = {skip: true};\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    let clickFromLabel = false;\n    let path = getComposedPath(mouseEvent);\n    for (let i = 0; i < path.length; i++) {\n      if (path[i].nodeType === Node.ELEMENT_NODE) {\n        if (path[i].localName === 'label') {\n          clickedLabels.push(/** @type {!HTMLLabelElement} */ (path[i]));\n        } else if (canBeLabelled(/** @type {!HTMLElement} */ (path[i]))) {\n          let ownerLabels =\n              matchingLabels(/** @type {!HTMLElement} */ (path[i]));\n          // check if one of the clicked labels is labelling this element\n          for (let j = 0; j < ownerLabels.length; j++) {\n            clickFromLabel = clickFromLabel || clickedLabels.indexOf(ownerLabels[j]) > -1;\n          }\n        }\n      }\n      if (path[i] === POINTERSTATE.mouse.target) {\n        return;\n      }\n    }\n    // if one of the clicked labels was labelling the target element,\n    // this is not a ghost click\n    if (clickFromLabel) {\n      return;\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n * @return {void}\n */\nfunction setupTeardownMouseCanceller(setup) {\n  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (let i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      // reset clickLabels array\n      clickedLabels.length = 0;\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!cancelSyntheticClickEvents) {\n    return;\n  }\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  let unset = function() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = getComposedPath(e)[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(\n        POINTERSTATE.mouse.mouseIgnoreJob\n      , timeOut.after(MOUSE_TIMEOUT)\n      , unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  let type = ev.type;\n  // exit early if the event is not a mouse event\n  if (!isMouseEvent(type)) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    let button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    let t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    let bcr = /** @type {Element} */(t).getBoundingClientRect();\n    // use page x/y to account for scrolling\n    let x = ev.pageX, y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n  }\n  return false;\n}\n\nlet POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  let path = getComposedPath(ev);\n  for (let i = 0, n; i < path.length; i++) {\n    n = path[i];\n    if (n[TOUCH_ACTION]) {\n      ta = n[TOUCH_ACTION];\n      break;\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\nif (cancelSyntheticClickEvents) {\n  // use a document-wide touchend listener to start the ghost-click prevention mechanism\n  // Use passive event listeners, if supported, to not affect scrolling performance\n  document.addEventListener('touchend', ignoreMouse, supportsPassive ? {passive: true} : false);\n}\n\n/**\n * Returns the composedPath for the given event.\n * @param {Event} event to process\n * @return {!Array<!EventTarget>} Path of the event\n */\nconst getComposedPath = window.ShadyDOM && window.ShadyDOM.noPatch ?\n  window.ShadyDOM.composedPath :\n  (event) => event.composedPath && event.composedPath() || [];\n\n/** @type {!Object<string, !GestureRecognizer>} */\nexport const gestures = {};\n\n/** @type {!Array<!GestureRecognizer>} */\nexport const recognizers = [];\n\n/**\n * Finds the element rendered on the screen at the provided coordinates.\n *\n * Similar to `document.elementFromPoint`, but pierces through\n * shadow roots.\n *\n * @param {number} x Horizontal pixel coordinate\n * @param {number} y Vertical pixel coordinate\n * @return {Element} Returns the deepest shadowRoot inclusive element\n * found at the screen position given.\n */\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    let oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\n/**\n * a cheaper check than ev.composedPath()[0];\n *\n * @private\n * @param {Event|Touch} ev Event.\n * @return {EventTarget} Returns the event target.\n */\nfunction _findOriginalTarget(ev) {\n  const path = getComposedPath(/** @type {?Event} */ (ev));\n  // It shouldn't be, but sometimes path is empty (window on Safari).\n  return path.length > 0 ? path[0] : ev.target;\n}\n\n/**\n * @private\n * @param {Event} ev Event.\n * @return {void}\n */\nfunction _handleNative(ev) {\n  let handled;\n  let type = ev.type;\n  let node = ev.currentTarget;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  let gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n      let t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\n/**\n * @private\n * @param {TouchEvent} ev Event.\n * @return {void}\n */\nfunction _handleTouchAction(ev) {\n  let t = ev.changedTouches[0];\n  let type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    let ta = firstTouchAction(ev);\n    let shouldPrevent = false;\n    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      shouldPrevent = true;\n    } else if (ta === 'pan-x') {\n      shouldPrevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      shouldPrevent = dx > dy;\n    }\n    if (shouldPrevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\n/**\n * Adds an event listener to a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to add listener on\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function to call\n * @return {boolean} Returns true if a gesture event listener was added.\n */\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an event listener from a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to remove listener from\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function previously passed to\n *  `addListener`.\n * @return {boolean} Returns true if a gesture event listener was removed.\n */\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * automate the event listeners for the native events\n *\n * @private\n * @param {!EventTarget} node Node on which to add the event.\n * @param {string} evType Event type to add.\n * @param {function(!Event)} handler Event handler function.\n * @return {void}\n */\nfunction _add(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = {_count: 0};\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\n/**\n * automate event listener removal for native events\n *\n * @private\n * @param {!EventTarget} node Node on which to remove the event.\n * @param {string} evType Event type to remove.\n * @param {function(!Event): void} handler Event handler function.\n * @return {void}\n */\nfunction _remove(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\n/**\n * Registers a new gesture event recognizer for adding new custom\n * gesture event types.\n *\n * @param {!GestureRecognizer} recog Gesture recognizer descriptor\n * @return {void}\n */\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\n/**\n * @private\n * @param {string} evName Event name.\n * @return {Object} Returns the gesture for the given event name.\n */\nfunction _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Sets scrolling direction on node.\n *\n * This value is checked on first move, thus it should be called prior to\n * adding event listeners.\n *\n * @param {!EventTarget} node Node to set touch action setting on\n * @param {string} value Touch action value\n * @return {void}\n */\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA && node instanceof HTMLElement) {\n    // NOTE: add touchAction async so that events can be added in\n    // custom element constructors. Otherwise we run afoul of custom\n    // elements restriction against settings attributes (style) in the\n    // constructor.\n    microTask.run(() => {\n      node.style.touchAction = value;\n    });\n  }\n  node[TOUCH_ACTION] = value;\n}\n\n/**\n * Dispatches an event on the `target` element of `type` with the given\n * `detail`.\n * @private\n * @param {!EventTarget} target The element on which to fire an event.\n * @param {string} type The type of event to fire.\n * @param {!Object=} detail The detail object to populate on the event.\n * @return {void}\n */\nfunction _fire(target, type, detail) {\n  let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  wrap(/** @type {!Node} */(target)).dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    let preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\n/**\n * Prevents the dispatch and default action of the given event name.\n *\n * @param {string} evName Event name.\n * @return {void}\n */\nexport function prevent(evName) {\n  let recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\n/**\n * Reset the 2500ms timeout on processing mouse input after detecting touch input.\n *\n * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.\n * This method should only be called during testing with simulated touch inputs.\n * Calling this method in production may cause duplicate taps or other Gestures.\n *\n * @return {void}\n */\nexport function resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    let upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    downupFire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    downupFire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    downupFire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {string} type\n * @param {EventTarget} target\n * @param {Event|Touch} event\n * @param {Event=} preventer\n * @return {void}\n */\nfunction downupFire(type, target, event, preventer) {\n  if (!target) {\n    return;\n  }\n  _fire(target, type, {\n    x: event.clientX,\n    y: event.clientY,\n    sourceEvent: event,\n    preventer: preventer,\n    prevent: function(e) {\n      return prevent(e);\n    }\n  });\n}\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureInfo} */\n    addMove: function(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      let x = e.clientX, y = e.clientY;\n      if (trackHasMovedEnough(self.info, x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({x: x, y: y});\n        if (!hasLeftMouseButton(e)) {\n          // always fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        if (t) {\n          trackFire(self.info, t, e);\n        }\n        self.info.started = true;\n      }\n    };\n    let upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    let ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchmove: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    let x = ct.clientX, y = ct.clientY;\n    if (trackHasMovedEnough(this.info, x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({x: x, y: y});\n      trackFire(this.info, t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({x: ct.clientX, y: ct.clientY});\n      trackFire(this.info, t, ct);\n    }\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nfunction trackHasMovedEnough(info, x, y) {\n  if (info.prevent) {\n    return false;\n  }\n  if (info.started) {\n    return true;\n  }\n  let dx = Math.abs(info.x - x);\n  let dy = Math.abs(info.y - y);\n  return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n}\n\n/**\n * @param {!GestureInfo} info\n * @param {?EventTarget} target\n * @param {Touch} touch\n * @return {void}\n */\nfunction trackFire(info, target, touch) {\n  if (!target) {\n    return;\n  }\n  let secondlast = info.moves[info.moves.length - 2];\n  let lastmove = info.moves[info.moves.length - 1];\n  let dx = lastmove.x - info.x;\n  let dy = lastmove.y - info.y;\n  let ddx, ddy = 0;\n  if (secondlast) {\n    ddx = lastmove.x - secondlast.x;\n    ddy = lastmove.y - secondlast.y;\n  }\n  _fire(target, 'track', {\n    state: info.state,\n    x: touch.clientX,\n    y: touch.clientY,\n    dx: dx,\n    dy: dy,\n    ddx: ddx,\n    ddy: ddy,\n    sourceEvent: touch,\n    hover: function() {\n      return deepTargetFind(touch.clientX, touch.clientY);\n    }\n  });\n}\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  click: function(e) {\n    if (hasLeftMouseButton(e)) {\n      trackForward(this.info, e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    const touch = e.changedTouches[0];\n    this.info.x = touch.clientX;\n    this.info.y = touch.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    trackForward(this.info, e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {Event | Touch} e\n * @param {Event=} preventer\n * @return {void}\n */\nfunction trackForward(info, e, preventer) {\n  let dx = Math.abs(e.clientX - info.x);\n  let dy = Math.abs(e.clientY - info.y);\n  // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n  let t = _findOriginalTarget((preventer || e));\n  if (!t || (canBeDisabled[/** @type {!HTMLElement} */(t).localName] && t.hasAttribute('disabled'))) {\n    return;\n  }\n  // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n  if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n    // prevent taps from being generated if an event has canceled them\n    if (!info.prevent) {\n      _fire(t, 'tap', {\n        x: e.clientX,\n        y: e.clientY,\n        sourceEvent: e,\n        preventer: preventer\n      });\n    }\n  }\n}\n\n/* eslint-enable valid-jsdoc */\n\n/** @deprecated */\nexport const findOriginalTarget = _findOriginalTarget;\n\n/** @deprecated */\nexport const add = addListener;\n\n/** @deprecated */\nexport const remove = removeListener;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { LitElement, html, css, property, customElement, query } from 'lit-element';\nimport { addListener, removeListener } from '@polymer/polymer/lib/utils/gestures';\nlet EmojiSlider = class EmojiSlider extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.step = 0.1;\n        this.pctValue = 0;\n        this.dragging = false;\n        this.upHandler = () => this.onUp();\n        this.downHandler = (e) => this.onDown(e);\n        this.trackHandler = (e) => this.onTrack(e);\n        this.keyHandler = (e) => this.handleKeyDown(e);\n    }\n    render() {\n        const emojiChar = (this.emoji && this.emoji.length) ? [...this.emoji][0] : '';\n        return html `\n    <div id=\"bar\">\n      <div id=\"barLine\">\n        <div id=\"valueBar\"></div>\n      </div>\n      <div id=\"cursor\" class=\"${emojiChar ? 'emoji' : 'noemoji'}\">\n        <span>${emojiChar}</span>\n      </div>\n      <style>\n        ${this.cssOverride}\n      </style>\n    </div>\n    `;\n    }\n    firstUpdated() {\n        this.attachTrackHandlers();\n        // aria\n        this.setAttribute('role', 'slider');\n        this.setAttribute('aria-valuemax', '1');\n        this.setAttribute('aria-valuemin', '0');\n        this.tabIndex = +(this.getAttribute('tabindex') || 0);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.detachTrackHandlers();\n    }\n    attachTrackHandlers() {\n        this.detachTrackHandlers();\n        const bar = this.trackBar;\n        addListener(bar, 'up', this.upHandler);\n        addListener(bar, 'down', this.downHandler);\n        addListener(bar, 'track', this.trackHandler);\n        this.addEventListener('keydown', this.keyHandler);\n    }\n    detachTrackHandlers() {\n        const bar = this.trackBar;\n        removeListener(bar, 'up', this.upHandler);\n        removeListener(bar, 'down', this.downHandler);\n        removeListener(bar, 'track', this.trackHandler);\n        this.removeEventListener('keydown', this.keyHandler);\n    }\n    onUp() {\n        this.trackEnd();\n    }\n    onDown(e) {\n        const event = e;\n        event.preventDefault();\n        this.setValue(event.detail.x);\n        this.cursor.classList.add('active');\n        this.focus();\n    }\n    onTrack(e) {\n        const event = e;\n        event.stopPropagation();\n        switch (event.detail.state) {\n            case 'start':\n                this.trackStart();\n                break;\n            case 'track':\n                this.trackX(event);\n                break;\n            case 'end':\n                this.trackEnd();\n                break;\n        }\n    }\n    trackStart() {\n        this.dragging = true;\n        this.cursor.classList.add('active');\n    }\n    trackEnd() {\n        this.dragging = false;\n        this.cursor.classList.remove('active');\n    }\n    trackX(event) {\n        if (!this.dragging) {\n            this.trackStart();\n        }\n        this.setValue(event.detail.x);\n    }\n    setValue(x) {\n        const rect = this.trackBar.getBoundingClientRect();\n        const pct = Math.max(0, Math.min(rect.width ? ((x - rect.left) / rect.width) : 0, 1));\n        if (this.pctValue !== pct) {\n            this.pctValue = pct;\n            this.updateValue();\n            this.fireEvent('change');\n        }\n    }\n    fireEvent(name) {\n        this.dispatchEvent(new CustomEvent(name, { bubbles: true, composed: true, detail: { value: this.value } }));\n    }\n    set value(v) {\n        this.pctValue = v;\n        this.updateValue();\n    }\n    get value() {\n        return this.pctValue;\n    }\n    updateValue() {\n        const offset = `${this.pctValue * 100}%`;\n        if (this.cursor)\n            this.cursor.style.left = offset;\n        if (this.valueBar) {\n            this.valueBar.style.width = offset;\n        }\n    }\n    handleKeyDown(e) {\n        switch (e.keyCode) {\n            case 38:\n            case 39: {\n                const newValue = Math.min(1, this.value + this.step);\n                if (newValue !== this.value) {\n                    this.value = newValue;\n                    this.fireEvent('change');\n                }\n                break;\n            }\n            case 37:\n            case 40: {\n                const newValue = Math.max(0, this.value - this.step);\n                if (newValue !== this.value) {\n                    this.value = newValue;\n                    this.fireEvent('change');\n                }\n                break;\n            }\n            case 36:\n                if (this.value !== 0) {\n                    this.setValue(0);\n                    this.fireEvent('change');\n                }\n                break;\n            case 35:\n                if (this.value !== 1) {\n                    this.setValue(1);\n                    this.fireEvent('change');\n                }\n                break;\n        }\n    }\n};\nEmojiSlider.styles = css `\n    :host {\n      display: block;\n      position: relative;\n      outline: none;\n    }\n    #bar {\n      position: relative;\n      cursor: pointer;\n      padding: 10px 0;\n    }\n    #barLine {\n      background: var(--emoji-slider-bar-color, #e5e5e5);\n      height: 4px;\n      position: relative;\n    }\n    #valueBar {\n      background: var(--emoji-slider-bar-active-color, #2196f3);\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n    }\n    #cursor {\n      position: absolute;\n      top: 4px;\n      left: 0px;\n      transform: translate3d(-8px, 0, 0);\n      transition: transform 0.28s ease, box-shadow 0.28s ease;\n    }\n    #cursor.noemoji {\n      background: var(--emoji-slider-cursor-color, #d32f2f);\n      border-radius: 10px;\n      width: 16px;\n      height: 16px;\n    }\n    #cursor.noemoji span {\n      display: none;\n    }\n    #cursor.emoji {\n      background: none;\n      width: auto;\n      height: auto;\n      font-size: var(--emoji-slider-font-size, 24px);\n      line-height: 1.17;\n      transform: translate3d(-8px, -0.25em, 0);\n    }\n    #cursor.active {\n      transform: translate3d(-8px, 0, 0) scale(1.5);\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    }\n    #cursor.emoji.active {\n      transform: translate3d(-8px, -0.25em, 0) scale(1.5);\n      box-shadow: none;\n    }\n  `;\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], EmojiSlider.prototype, \"emoji\", void 0);\n__decorate([\n    property({ type: Number }),\n    __metadata(\"design:type\", Object)\n], EmojiSlider.prototype, \"step\", void 0);\n__decorate([\n    property(),\n    __metadata(\"design:type\", String)\n], EmojiSlider.prototype, \"cssOverride\", void 0);\n__decorate([\n    query('#bar'),\n    __metadata(\"design:type\", HTMLDivElement)\n], EmojiSlider.prototype, \"trackBar\", void 0);\n__decorate([\n    query('#cursor'),\n    __metadata(\"design:type\", HTMLDivElement)\n], EmojiSlider.prototype, \"cursor\", void 0);\n__decorate([\n    query('#valueBar'),\n    __metadata(\"design:type\", HTMLDivElement)\n], EmojiSlider.prototype, \"valueBar\", void 0);\nEmojiSlider = __decorate([\n    customElement('emoji-slider')\n], EmojiSlider);\nexport { EmojiSlider };\n","import React, { useEffect, Suspense } from \"react\"\nimport 'emoji-slider';\n\nconst Contact = () => {\n    const isSSR = typeof window === \"undefined\"\n\n    useEffect(() => {\n        const label = document?.querySelector('#percentage-label');\n        const slider = document?.querySelector('emoji-slider');\n        slider?.addEventListener('change', () => {\n          label.innerHTML = Math.round(slider.value * 100) + '%';\n        });\n    \n        const rangeSlider = document?.querySelector('#rangeSlider');\n        console.log(rangeSlider);\n        rangeSlider?.addEventListener('change', () => {\n          const v = rangeSlider.value;\n          console.log(rangeSlider.value);\n          let moods = [\"😡\",\"😠\",\"😦\",\"😩\",\"🙁\",\"😐\",\"🙂\",\"😊\",\"😄\",\"😃\",\"😍\"];\n\t\t\t\n\t\t\tif (v === 0) {\n\t\t\t\trangeSlider.emoji = \"🤬\";\n\t\t\t} else {\n                rangeSlider.emoji = moods[(Math.floor(v * 10))];\n            }\n        });\n    }, [document, window])\n  return (\n    <div id=\"contact-wrap\">\n        <form action=\"\" className=\"form\">\n            <p className=\"field required half\">\n                <input className=\"text-input\" id=\"name\" name=\"name\" placeholder=\"Fullname\" required type=\"text\"/>\n            </p>\n            <p className=\"field required half two\">\n                <input className=\"text-input\" id=\"email\" name=\"email\" placeholder=\"Email Address\" required type=\"email\"/>\n            </p>\n            <p className=\"field\">\n                <textarea className=\"textarea\" cols=\"50\" id=\"message\" name=\"message\" placeholder=\"Message\" required rows=\"4\"></textarea>\n            </p>\n            \n            <div id=\"contact-emoji-slider\">\n                <span>Rate my portfolio: <span id=\"percentage-label\">90%</span></span>\n                <emoji-slider emoji=\"😍\" pctValue=\"90\" id=\"rangeSlider\" cssOverride={`\n                    #barLine {\n                        height: 10px !important\n                    }\n\n                    #cursor.emoji {\n                        font-size: 34px !important\n                    }\n\n                    #valueBar, #barLine {\n                        border-radius: 50px\n                    }\n                `}></emoji-slider>\n            </div>\n\n            <p className=\"field\">\n                <input className=\"button\" type=\"submit\" value=\"Send message\"/>\n            </p>\n        </form>\n    </div>\n\n  )\n}\n\nexport default Contact"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","value","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","v","text","t","setAttribute","committer","directive","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","Boolean","Object","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","static","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","_v","_instanceProperties","_applyInstanceProperties","connectedCallback","enableUpdating","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","async","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","getUpdateComplete","size","standardProperty","kind","assign","finisher","clazz","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","query","selector","cache","renderRoot","legacyQuery","standardQuery","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","reduce","css","rule","_getUniqueStyles","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","shadowRootOptions","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","mode","obj","microtaskCurrHandle","microtaskLastHandle","microtaskCallbacks","microtaskNodeContent","microtaskScheduled","microtaskNode","MutationObserver","len","cb","setTimeout","splice","observe","characterData","timeOut","after","delay","run","fn","cancel","handle","clearTimeout","microTask","callback","idx","MixinFunction","__mixinApplications","__mixinSet","Debouncer","_asyncModule","_callback","_timer","setConfig","asyncModule","debouncerQueue","delete","isActive","_cancelAsync","flush","debouncer","useShadow","ShadyDOM","nativeCss","sheet","shadowRoot","Polymer","rootPath","url","baseURI","location","href","substring","sanitizeDOMValue","passiveTouchGestures","setPassiveTouchGestures","strictTemplatePolicy","allowTemplateFromDomModule","legacyOptimizations","legacyWarnings","syncInitialRender","legacyUndefined","orderedComputed","cancelSyntheticClickEvents","removeNestedTemplates","fastDomIf","suppressTemplateNotifications","legacyNoObservedAttributes","useAdoptedStyleSheetsWithBuiltCSS","wrap","HAS_NATIVE_TA","head","touchAction","GESTURE_KEY","HANDLED_OBJ","TOUCH_ACTION","MOUSE_EVENTS","MOUSE_WHICH_TO_BUTTONS","MOUSE_HAS_BUTTONS","MouseEvent","buttons","isMouseEvent","supportsPassive","PASSIVE_TOUCH","opts","IS_TOUCH_ONLY","navigator","userAgent","clickedLabels","labellable","canBeDisabled","matchingLabels","el","labels","root","getRootNode","id","matching","mouseCanceller","mouseEvent","sc","sourceCapabilities","firesTouchEvents","skip","clickFromLabel","path","getComposedPath","ELEMENT_NODE","ownerLabels","j","POINTERSTATE","mouse","target","preventDefault","stopPropagation","setupTeardownMouseCanceller","setup","events","en","hasLeftMouseButton","ev","which","button","mouseIgnoreJob","touch","x","y","scrollDecided","trackDocument","stateObj","movefn","upfn","untrackDocument","debounce","noPatch","composedPath","gestures","recognizers","_findOriginalTarget","_handleNative","handled","gobj","currentTarget","gs","changedTouches","touches","identifier","clientX","clientY","ta","firstTouchAction","shouldPrevent","dx","abs","dy","cancelable","prevent","_handleTouchAction","r","flow","reset","addListener","evType","handler","recognizer","deps","dep","gd","_count","setTouchAction","_add","removeListener","_remove","register","recog","emits","_fire","detail","Event","bubbles","composed","dispatchEvent","defaultPrevented","preventer","sourceEvent","evName","_findRecognizerByEvent","info","downupFire","trackHasMovedEnough","started","trackFire","ddx","secondlast","moves","lastmove","ddy","state","hover","elementFromPoint","next","oldNext","deepTargetFind","trackForward","hasAttribute","isNaN","bcr","getBoundingClientRect","pageX","pageY","left","right","top","bottom","isSyntheticClick","mousedown","self","touchstart","touchend","addMove","move","shift","ct","touchmove","NaN","click","__decorate","decorators","desc","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadata","EmojiSlider","step","pctValue","dragging","upHandler","onUp","downHandler","onDown","trackHandler","onTrack","keyHandler","handleKeyDown","emojiChar","emoji","cssOverride","attachTrackHandlers","tabIndex","detachTrackHandlers","bar","trackBar","trackEnd","cursor","classList","focus","trackStart","trackX","remove","rect","pct","max","min","width","updateValue","fireEvent","CustomEvent","offset","valueBar","keyCode","newValue","acc","textFromCSSResult","HTMLDivElement","classOrDescriptor","define","legacyCustomElement","elements","standardCustomElement","useEffect","label","slider","round","rangeSlider","log","moods","floor","action","className","placeholder","required","cols","rows"],"sourceRoot":""}